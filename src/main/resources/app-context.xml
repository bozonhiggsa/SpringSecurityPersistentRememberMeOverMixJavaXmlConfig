<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/security"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:jdbc="http://www.springframework.org/schema/jdbc"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <http>
        <intercept-url pattern="/" requires-channel="http"/>
        <intercept-url pattern="/**" requires-channel="https"/>
        <intercept-url pattern="/admin/auth" access="hasAnyAuthority('ROLE_ADMIN')"/>
        <intercept-url pattern="/auth" access="hasAnyAuthority('ROLE_ADMIN','ROLE_USER')"/>
        <intercept-url pattern="/permit" access="permitAll"/>
        <intercept-url pattern="/forbid" access="denyAll"/>
        <intercept-url pattern="/anonymous" access="isAnonymous()"/>
        <intercept-url pattern="/authenticated" access="isAuthenticated()"/>
        <intercept-url pattern="/fullyAuthenticated" access="isFullyAuthenticated()"/>
        <intercept-url pattern="/rememberMe" access="isRememberMe()"/>
        <intercept-url pattern="/login" access="permitAll"/>
        <intercept-url pattern="/logout" access="permitAll"/>

        <form-login login-page="/login" />
        <http-basic />
        <!--<remember-me key="secretKey"/>-->
        <remember-me data-source-ref="dataSource" token-validity-seconds="86400"/>
        <logout logout-url="/logout"/>
        <!--<logout logout-url="/logout" delete-cookies="JSESSIONID"/>-->
    </http>

     <!--create H2 embedded database table on startup-->
    <jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:/persisted_logins_create_table.sql"/>
    </jdbc:embedded-database>

    <!-- Uses a database table to maintain a set of persistent login data -->
    <beans:bean id="jdbcTokenRepository"
                class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <beans:property name="createTableOnStartup" value="false"/>
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>

    <!-- Persistent Remember Me Service -->
    <beans:bean id="rememberMeAuthenticationProvider"
                class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <beans:constructor-arg value="myAppKey"/>
        <beans:constructor-arg ref="jdbcTokenRepository"/>
        <beans:constructor-arg ref="myUserDetailsService"/>
    </beans:bean>

    <!-- Authentication Manager (uses same UserDetailsService as RememberMeService) -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="myUserDetailsService">
            <password-encoder ref="encoder" />
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    <beans:constructor-arg name="strength" value="12"/>
    </beans:bean>

    <beans:bean id="myUserDetailsService"
                class="com.application.springSecurity.service.MyUserDetailsService">
        <beans:constructor-arg name="bCryptPasswordEncoder" ref="encoder"/>
    </beans:bean>

</beans:beans>